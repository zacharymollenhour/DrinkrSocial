// <auto-generated />
using System;
using DrinkrSocial.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DrinkrSocial.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220610172915_Tavern_TavernOperatingHours_DayInWeek")]
    partial class Tavern_TavernOperatingHours_DayInWeek
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DrinkrSocial.Domain.Entities.Models.Calendar.DayInWeek", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TavernOperatingHoursDayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TavernOperatingHoursOperatingHoursId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TavernOperatingHoursTavernId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TavernOperatingHoursDayId", "TavernOperatingHoursOperatingHoursId", "TavernOperatingHoursTavernId");

                    b.ToTable("DayInWeek");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b372a17b-1d6a-4944-bd40-1a077a303acd"),
                            DayName = "Monday"
                        },
                        new
                        {
                            Id = new Guid("721e9a99-b783-4dde-95fd-ee1baabd7f1c"),
                            DayName = "Tuesday"
                        },
                        new
                        {
                            Id = new Guid("1c326e9e-7a39-4c89-a755-dbe2dc63a428"),
                            DayName = "Wednesday"
                        },
                        new
                        {
                            Id = new Guid("88ea84eb-8858-430d-a076-1c3d5251e0b9"),
                            DayName = "Thursday"
                        },
                        new
                        {
                            Id = new Guid("0c6b2c73-d6b0-4f21-bb88-b55004120395"),
                            DayName = "Friday"
                        },
                        new
                        {
                            Id = new Guid("38799236-31e9-48e9-af78-970fc4f2ebf7"),
                            DayName = "Saturday"
                        },
                        new
                        {
                            Id = new Guid("4f9bc7b1-fed3-4719-a7a9-e99d1b436202"),
                            DayName = "Sunday"
                        });
                });

            modelBuilder.Entity("DrinkrSocial.Domain.Entities.Models.DropdownLookups.State", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StateNameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateNameES")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            Id = new Guid("122919d2-4235-4764-b995-409c64353208"),
                            StateNameEN = "Iowa",
                            StateNameES = "Iowa"
                        });
                });

            modelBuilder.Entity("DrinkrSocial.Domain.Entities.Models.Taverns.Tavern", b =>
                {
                    b.Property<Guid>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateId");

                    b.ToTable("Taverns");

                    b.HasData(
                        new
                        {
                            StateId = new Guid("122919d2-4235-4764-b995-409c64353208"),
                            AddressLine1 = "1886 Hansel Drive",
                            City = "Dubuque",
                            Country = "USA",
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Zachs Bar",
                            PhoneNumber = "904-553-2614",
                            PostalCode = "52002"
                        });
                });

            modelBuilder.Entity("DrinkrSocial.Domain.Entities.Models.Taverns.TavernHappyHours", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("EndTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TavernId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TavernHappyHours");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d7b563d0-1900-4e96-87b8-1040a9a606e1"),
                            Day = 0,
                            EndTime = "12:00 P.M",
                            StartTime = "8:00 A.M",
                            TavernId = new Guid("6e5d8fa8-fa96-419f-9c07-3e05b96b087e")
                        });
                });

            modelBuilder.Entity("DrinkrSocial.Domain.Entities.Models.Taverns.TavernOperatingHours", b =>
                {
                    b.Property<Guid>("DayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OperatingHoursId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TavernId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CloseTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpenTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DayId", "OperatingHoursId", "TavernId");

                    b.ToTable("TavernOperatingHours");

                    b.HasData(
                        new
                        {
                            DayId = new Guid("b372a17b-1d6a-4944-bd40-1a077a303acd"),
                            OperatingHoursId = new Guid("b1784642-2fa7-41b5-9f3b-6124fb91692f"),
                            TavernId = new Guid("6e5d8fa8-fa96-419f-9c07-3e05b96b087e"),
                            CloseTime = "12:00 P.M",
                            OpenTime = "8:00 A.M"
                        },
                        new
                        {
                            DayId = new Guid("721e9a99-b783-4dde-95fd-ee1baabd7f1c"),
                            OperatingHoursId = new Guid("dfe18a72-d95e-4936-9d67-1203fe5a344e"),
                            TavernId = new Guid("6e5d8fa8-fa96-419f-9c07-3e05b96b087e"),
                            CloseTime = "12:00 P.M",
                            OpenTime = "8:00 A.M"
                        },
                        new
                        {
                            DayId = new Guid("1c326e9e-7a39-4c89-a755-dbe2dc63a428"),
                            OperatingHoursId = new Guid("56e510d6-4d4b-4596-926d-2f751dcb27b3"),
                            TavernId = new Guid("6e5d8fa8-fa96-419f-9c07-3e05b96b087e"),
                            CloseTime = "12:00 P.M",
                            OpenTime = "8:00 A.M"
                        },
                        new
                        {
                            DayId = new Guid("88ea84eb-8858-430d-a076-1c3d5251e0b9"),
                            OperatingHoursId = new Guid("385d4334-ea67-4887-81de-b4a7caa61d94"),
                            TavernId = new Guid("6e5d8fa8-fa96-419f-9c07-3e05b96b087e"),
                            CloseTime = "12:00 P.M",
                            OpenTime = "8:00 A.M"
                        },
                        new
                        {
                            DayId = new Guid("0c6b2c73-d6b0-4f21-bb88-b55004120395"),
                            OperatingHoursId = new Guid("b7c32dbe-5081-4004-8087-69f9c1101f01"),
                            TavernId = new Guid("6e5d8fa8-fa96-419f-9c07-3e05b96b087e"),
                            CloseTime = "12:00 P.M",
                            OpenTime = "8:00 A.M"
                        },
                        new
                        {
                            DayId = new Guid("38799236-31e9-48e9-af78-970fc4f2ebf7"),
                            OperatingHoursId = new Guid("68c75036-5aaf-4937-ad54-f36d524e8e32"),
                            TavernId = new Guid("6e5d8fa8-fa96-419f-9c07-3e05b96b087e"),
                            CloseTime = "12:00 P.M",
                            OpenTime = "8:00 A.M"
                        },
                        new
                        {
                            DayId = new Guid("4f9bc7b1-fed3-4719-a7a9-e99d1b436202"),
                            OperatingHoursId = new Guid("a9705af2-48ff-40e1-a688-c61990ab7d86"),
                            TavernId = new Guid("6e5d8fa8-fa96-419f-9c07-3e05b96b087e"),
                            CloseTime = "12:00 P.M",
                            OpenTime = "8:00 A.M"
                        });
                });

            modelBuilder.Entity("DrinkrSocial.Domain.Entities.Models.Users.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("43db034a-98cc-42ee-8fff-c57016484f4d"),
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("DrinkrSocial.Domain.Entities.Models.Users.TokenRefresh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TokenRefreshs");
                });

            modelBuilder.Entity("DrinkrSocial.Domain.Entities.Models.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("EmailConfirmedCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetPasswordCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e5d8fa8-fa96-419f-9c07-3e05b96b087e"),
                            Email = "defaultadmin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Default",
                            LastName = "Admin",
                            PasswordHash = new byte[] { 180, 5, 178, 244, 35, 158, 87, 42, 238, 39, 231, 109, 225, 90, 193, 140, 161, 224, 168, 242, 54, 13, 190, 186, 96, 190, 101, 225, 220, 170, 74, 232, 60, 170, 12, 41, 107, 200, 181, 152, 87, 0, 209, 197, 19, 96, 144, 219, 176, 246, 220, 81, 223, 213, 34, 18, 39, 89, 62, 125, 18, 164, 200, 107 },
                            PasswordSalt = new byte[] { 124, 125, 90, 142, 138, 226, 204, 31, 28, 116, 18, 193, 197, 250, 176, 161, 35, 31, 141, 230, 150, 178, 5, 99, 250, 50, 88, 202, 235, 167, 11, 112, 143, 146, 23, 85, 220, 201, 61, 180, 169, 45, 61, 22, 22, 85, 117, 54, 115, 235, 108, 215, 206, 231, 229, 238, 209, 201, 141, 143, 77, 158, 56, 253, 100, 0, 2, 8, 98, 116, 15, 185, 130, 126, 58, 91, 6, 45, 180, 202, 38, 251, 113, 56, 84, 103, 179, 195, 131, 185, 183, 8, 252, 192, 167, 46, 37, 105, 40, 88, 173, 143, 221, 83, 56, 230, 20, 85, 164, 25, 135, 69, 161, 154, 236, 144, 85, 96, 211, 199, 169, 237, 232, 89, 218, 187, 110, 209 },
                            PostalCode = "52002",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("DrinkrSocial.Domain.Entities.Models.Users.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("6e5d8fa8-fa96-419f-9c07-3e05b96b087e"),
                            RoleId = new Guid("43db034a-98cc-42ee-8fff-c57016484f4d")
                        });
                });

            modelBuilder.Entity("DrinkrSocial.Domain.Entities.Models.Calendar.DayInWeek", b =>
                {
                    b.HasOne("DrinkrSocial.Domain.Entities.Models.Taverns.TavernOperatingHours", null)
                        .WithMany("Day")
                        .HasForeignKey("TavernOperatingHoursDayId", "TavernOperatingHoursOperatingHoursId", "TavernOperatingHoursTavernId");
                });

            modelBuilder.Entity("DrinkrSocial.Domain.Entities.Models.Users.UserRole", b =>
                {
                    b.HasOne("DrinkrSocial.Domain.Entities.Models.Users.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DrinkrSocial.Domain.Entities.Models.Users.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DrinkrSocial.Domain.Entities.Models.Taverns.TavernOperatingHours", b =>
                {
                    b.Navigation("Day");
                });

            modelBuilder.Entity("DrinkrSocial.Domain.Entities.Models.Users.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("DrinkrSocial.Domain.Entities.Models.Users.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
